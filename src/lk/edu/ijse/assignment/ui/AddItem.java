/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.edu.ijse.assignment.ui;

import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import lk.edu.ijse.assignment.controller.ControllerFactory;
import lk.edu.ijse.assignment.controller.custom.ManagerController;
import lk.edu.ijse.assignment.dto.ItemDTO;

/**
 *
 * @author Hansani Kariyawasam
 */
public class AddItem extends javax.swing.JPanel {
    private ManagerController ctrlManager;

    /**
     * Creates new form AddItem
     */
    public AddItem() {
        initComponents();
        txtDescription.requestFocus();
        ctrlManager=(ManagerController) ControllerFactory.getInstance().getControllerType(ControllerFactory.ControllerType.MANAGER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtQtyOnHand = new javax.swing.JTextField();
        txtDescription = new javax.swing.JTextField();
        txtUnitPrice = new javax.swing.JTextField();
        lblAdd = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtPackSize = new javax.swing.JTextField();
        lblClose = new javax.swing.JLabel();

        setBackground(new java.awt.Color(210, 240, 252));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add Item");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 185, 50));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Description ");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 88, 28));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Unit Price  ");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, 88, 28));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Qty On Hand");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 310, 88, 28));

        txtQtyOnHand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtyOnHandActionPerformed(evt);
            }
        });
        txtQtyOnHand.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQtyOnHandKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtQtyOnHandKeyTyped(evt);
            }
        });
        add(txtQtyOnHand, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 300, 220, 35));

        txtDescription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescriptionKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescriptionKeyTyped(evt);
            }
        });
        add(txtDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, 220, 35));

        txtUnitPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUnitPriceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUnitPriceKeyTyped(evt);
            }
        });
        add(txtUnitPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 230, 220, 35));

        lblAdd.setBackground(new java.awt.Color(133, 141, 144));
        lblAdd.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblAdd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdd.setText("Add New Item");
        lblAdd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblAdd.setOpaque(true);
        lblAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAddMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblAddMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblAddMouseExited(evt);
            }
        });
        add(lblAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 440, 120, 40));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("Pack Size");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 88, 28));
        add(txtPackSize, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 160, 220, 35));

        lblClose.setBackground(new java.awt.Color(210, 240, 252));
        lblClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/edu/ijse/assignment/images/icons8-Close Window-20.png"))); // NOI18N
        lblClose.setOpaque(true);
        lblClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblCloseMouseExited(evt);
            }
        });
        add(lblClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 10, -1, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void lblAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddMouseEntered
        lblAdd.setBackground(new Color(161, 169, 172  ));
    }//GEN-LAST:event_lblAddMouseEntered

    private void lblAddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddMouseExited
        lblAdd.setBackground(new Color(133,141,144));
    }//GEN-LAST:event_lblAddMouseExited

    private void txtQtyOnHandKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtyOnHandKeyReleased
        
    }//GEN-LAST:event_txtQtyOnHandKeyReleased

    private void txtUnitPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUnitPriceKeyReleased
        
    }//GEN-LAST:event_txtUnitPriceKeyReleased

    private void txtDescriptionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescriptionKeyReleased
        
    }//GEN-LAST:event_txtDescriptionKeyReleased

    private void txtDescriptionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescriptionKeyTyped
       char c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            evt.consume(); // Stop the event from propagating.
        }
        txtDescription.setBorder(BorderFactory.createEmptyBorder());
    }//GEN-LAST:event_txtDescriptionKeyTyped

    private void txtUnitPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUnitPriceKeyTyped
        char c=evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
        txtUnitPrice.setBorder(BorderFactory.createEmptyBorder());
    }//GEN-LAST:event_txtUnitPriceKeyTyped

    private void txtQtyOnHandKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtyOnHandKeyTyped
        char c=evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
        txtQtyOnHand.setBorder(BorderFactory.createEmptyBorder());
    }//GEN-LAST:event_txtQtyOnHandKeyTyped

    private void lblCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseClicked
        System.exit(0);
    }//GEN-LAST:event_lblCloseMouseClicked

    private void lblCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseEntered
        lblClose.setBackground(new Color(241, 166, 166));
    }//GEN-LAST:event_lblCloseMouseEntered

    private void lblCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseExited
        lblClose.setBackground(new Color(210,240,252 ));
    }//GEN-LAST:event_lblCloseMouseExited

    private void lblAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddMouseClicked
        addItem();
        
    }//GEN-LAST:event_lblAddMouseClicked

    private void txtQtyOnHandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtyOnHandActionPerformed
        addItem();
    }//GEN-LAST:event_txtQtyOnHandActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lblAdd;
    private javax.swing.JLabel lblClose;
    public static javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtPackSize;
    private javax.swing.JTextField txtQtyOnHand;
    private javax.swing.JTextField txtUnitPrice;
    // End of variables declaration//GEN-END:variables

    private void clear() {
        txtDescription.setText("");
        txtPackSize.setText("");
        txtQtyOnHand.setText("");
        txtUnitPrice.setText("");
        txtDescription.requestFocus();
    }

    private void addItem() {
        Border border=BorderFactory.createLineBorder(Color.RED);
        String desc=txtDescription.getText();
        String price=txtUnitPrice.getText();
        String qtyOnHand=txtQtyOnHand.getText();
        System.out.println("Desc    :"+desc);
        if(desc.equals("")){
            txtDescription.setBorder(border);
            txtDescription.requestFocus();
        }else if(price.equals("")){
            txtUnitPrice.setBorder(border);
            txtUnitPrice.requestFocus();
        }else if (qtyOnHand.equals("")) {
            txtQtyOnHand.setBorder(border);
            txtQtyOnHand.requestFocus();
        }else{
            ItemDTO item =new ItemDTO(
                desc, 
                Double.parseDouble(price), 
                Integer.parseInt(qtyOnHand)
            );
            try {
                System.out.println(ctrlManager);
                boolean result=ctrlManager.stockHandling(item);
                System.out.println("result :"+result);
                if(result){
                    JOptionPane.showMessageDialog(this, "Successfully Added");
                    clear();
                }else{
                    JOptionPane.showMessageDialog(this, "Failed to Add");
                }
            } catch (Exception ex) {
                Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
